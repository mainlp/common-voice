version: '3'
services:
  db:
    image: mysql:5.7.41
    networks:
      - voice-web
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=voiceweb
      - MYSQL_USER=voicecommons
      - MYSQL_PASSWORD=voicecommons
      - MYSQL_ROOT_PASSWORD=voicewebroot
    command: mysqld --sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
    ports:
      - 3306:3306
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - voice-web
  bundler:
    build:
      context: ./bundler
      dockerfile: Dockerfile
    container_name: bundler
    links:
      - db
      - redis
    volumes:
      - ./bundler:/home/node/code
    networks:
      - voice-web
    ports:
      - 9001:9001
    command: bash -c "npm ci && npm run build && npm start"
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: web
    links:
      - db
      - redis
    volumes:
      - .:/code
      - audio_data:/audio_data
    environment:
      - DOTENV_CONFIG_PATH=/code/.env-local-docker
      - UPLOADS_DIR=/audio_data
    networks:
      - voice-web
    ports:
      - 9000:9000
    command: bash -c "sed $$'s/\r$$//' /code/docker/wait-for-it.sh > /code/docker/wait-for-it.sh && /code/docker/wait-for-it.sh s3proxy:80 -- /code/docker/prepare_s3.sh && yarn --network-timeout 1000000 && yarn start"
networks:
  voice-web:

volumes:
  audio_data: